#!/usr/bin/env python
import telebot
from telebot import types
import random
from telebot.types import Message

TOKEN = '1880257043:AAH1vPzDRlD6dY6KC99U2CZuJRV79yDu_ic'


bot = telebot.TeleBot(TOKEN)
STICKER_ID = 'CAACAgIAAxkBAAIEymCj9BeaUyFS1vPb63OxqKeqXn37AAIEAQACVp29Ct4E0XpmZvdsHwQ'
USERS = set()


@bot.message_handler(commands=['start', 'help'])
def command_handler(message: Message):
    if message.text == '/start':
        bot.send_message(message.from_user.id, '–Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª —Å–æ–∑–¥–∞–Ω –ê–π–¥–∞—Ä–æ–º —Ä–∞–¥–∏ —Ç–µ–±—è –æ–¥–Ω–æ–π) –ø–µ—Ä–µ—Å–ø–∏–º?')
        bot.register_next_step_handler(message, reg_next)
    elif message.text == '/help':
        bot.send_message(message.from_user.id, '–Ø –ø–æ–∫–∞ –º–∞–ª–æ —á–µ–≥–æ —É–º–µ—é, –Ω–æ –∏ —Ç—ã –±–æ—Ä—â –Ω–µ –¥–æ—Å–æ–ª–∏–ª–∞!!!')


def reg_next(message: Message):
    if '–∞—Ö–∞—Ö—Ö–∞—Ö–∞—Ö—Ö–∞–∑–∞–∑–∑–∞—ä–∞–∞—Ö—ã–≤–∞–≤–∞—Ö–∞' in message.text.lower():
        bot.send_message(message.from_user.id, '–ú–µ–∂–¥—É –ø—Ä–æ—á–µ–º –Ω–∏—á–µ–≥–æ —Å–º–µ—à–Ω–æ–≥–æ —Ç—É—Ç –Ω–µ—Ç—É üòÇ')
    elif '–¥–∞' in message.text.lower():
        keyboard = types.InlineKeyboardMarkup()
        key_your_home = types.InlineKeyboardButton(text='–£ —Ç–µ–±—è', callback_data='yourhome')
        keyboard.add(key_your_home)
        key_my_home = types.InlineKeyboardButton(text='–£ –º–µ–Ω—è', callback_data='myhome')
        keyboard.add(key_my_home)
        key_padik = types.InlineKeyboardButton(text='–ú—ã –∂–µ –∂–µ—Å—Ç–∫–∏–µ –≤ –ø–∞–¥–∏–∫–µ –∫–æ–Ω–µ—á–Ω–æ', callback_data='vpadike')
        keyboard.add(key_padik)
        question = '–ù—É —á—Ç–æ –∂ —Ç–æ–≥–¥–∞ –≤—ã–±–∏—Ä–∞–π –≥–¥–µ?)'
        bot.send_message(message.from_user.id, text=question, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == 'yourhome':
        bot.send_message(call.message.chat.id, '–û—É –º–∞–π –ø–æ–∑–Ω–∞–∫–æ—Å–ª—é—Å—å —Å —Ç–≤–æ–∏–º –æ—Ç—Ü–æ–º')
    elif call.data == 'myhome':
        bot.send_message(call.message.chat.id, '–î–∞ —É–∂ —Ä–æ–¥–∏—Ç–µ–ª–∏ –ø—Ä—è–º–æ —Å–∫–∞–∂–µ–º –±—É–¥—É—Ç –≤ –∞—Ö—É—è—Ö')
    elif call.data == 'vpadike':
        bot.send_message(call.message.chat.id, '–ê —è –∑–Ω–∞–ª —á—Ç–æ –º—ã —Å —Ç–æ–±–æ–π —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã–µ –¥—É—à–∏')


@bot.message_handler(content_types=['video', 'photo'])
def video_gif(message: Message):
    if message.video:
        bot.send_message(message.from_user.id, '–ê–•–ê–•–ê–•–ê–•–ê–•')
    elif message.photo:
        bot.send_message(message.from_user.id, '–≠—Ç–æ —á—Ç–æ –∑–∞ –±–æ–≥–∏–Ω—è —Ç–∞–∫–∞—è')


@bot.message_handler(content_types=['text'])
@bot.edited_message_handler(content_types=['text'])
def echo_digits(message: Message):
    if '–ê–π–¥–∞—Ä, —Ç–∞–∫–æ–π –∫—Ä–∞—Å–∏–≤—ã–π –º–∞–ª—å—á–∏–∫' in message.text:
        bot.reply_to(message, 'YEAAAAAH, MY FUCKING GIRL')
        return
    reply = str(random.random())
    if message.from_user.id in USERS:
        reply += f'  {message.from_user.id}  hello again'
    bot.reply_to(message, reply)
    USERS.add(message.from_user.id)


@bot.message_handler(content_types=['sticker'])
def stiker_handler(message: Message):
    bot.send_sticker(message.from_user.id, STICKER_ID)


@bot.inline_handler(lambda query: query.query == 'text')
def query_text(inline_query):
    print(inline_query)
    try:
        r = types.InlineQueryResultArticle('1', 'Result', types.InputTextMessageContent('Result message.'))
        r2 = types.InlineQueryResultArticle('2', 'Result2', types.InputTextMessageContent('Result message2.'))
        bot.answer_inline_query(inline_query.id, [r, r2])
    except Exception as e:
        print(e)


bot.polling()
